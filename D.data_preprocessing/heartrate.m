function [run]=heartrate(run, varargin)
% This function calculates the heartrate (bpm), the heartperiod (sec. per beat) the heartbeatphase and the
% heartbeatonset for each run based on the pan tompkin algorithm and
% stores them in a new substructure 'variables' of the run.
% Ectopic beats are removed automatically. Remainder
% artifacts need to be selected in ft_databrowser and are replaced with
% nans.
%
% Use as
%   [run] = heartrate(run, varargin)
%
% INPUT:
%       run    = structure of all the runs generated by
%       LoadECGData.m and LoadEvents.m
% Additional options can be specified in key-value pairs and can be:
%       'vis_PT'    =  1 or 0 for visualizing the output of the
%       pan_tompkin algorithm (default = 0);
%       'vis'       = 1 or 0 for data browsing the computed heart rate for
%       each run (default = 1)
%       'vis_hist'      = 1 or 0 for visualizing the the heartrate over all
%       runs in a histogram (default = 1)
%
% OUTPUT
%       run    = same run but including new channels for
%       heartrate, heartperiod, heartbeatphase and heartbeatonset
%

%% Get the options
vis_PT= ft_getopt(varargin, 'vis_PT', 0);
vis=ft_getopt(varargin, 'vis', 1);
vis_hist=ft_getopt(varargin, 'vis_hist', 1);

if  ~isfield(run, 'variables')
  new=1;
else 
  new=0;
end
%% pan tompkin algorithm
for j=1:length(run)
  fprintf('..........calculating heart rate of run %d.......... \n', j)
  % heart beat detection with pan tompkin algorithm + correction of ectopic
  % beats
  cfg=[];
  cfg.channel=run(j).info.bestlead;
  cfg.feedback=vis_PT;
  cfg.method='pantompkin';
  cfg.ectopicbeatcorrect='yes';
  cfg.ectopicbeatthreshold=0.1;
  data_heartrate=ft_heartrate(cfg, run(j).data_ECG);
  if vis_PT
    fprintf('please inspect the calculated heart period. When done, press enter \n')
    pause
  end

  cfg=[];
  cfg.artfctdef.zvalue.channel= 'heartrate';
  cfg.artfctdef.zvalue.interactive='yes';
  cfg.artfctdef.zvalue.cutoff = 3; % sub-3, run 2 t0-10 is removed :( (similar run 3); sub04 too much; sub-6: not enough is removed in run 4 and othersq
  cfg.artfctdef.zvalue.artpadding=1; % sub-3, run 4 just too little
  cfg=ft_artifact_zvalue(cfg, data_heartrate);
  % replace artifacts with nan
  cfg.artfctdef.reject='nan';
  data_clean=ft_rejectartifact(cfg, data_heartrate);
  
  % identify remaining artifacts  (e.g. sub-5, run 4&5&6, sub-7,
  % sub-11? (sess1), sub 12
  fprintf('please inspect the calculated heart rate and identify remaining artefacts \n')
  cfg=[];
  cfg.channel='heartrate';
  cfg.blocksize=120;
  cfg.ylim=[50 150];
  cfg=ft_databrowser(cfg, data_clean);
  % replace artifacts with nan
  cfg.artfctdef.reject='nan';
  data_clean=ft_rejectartifact(cfg, data_clean);
  
  % add heart rate to the run structure
  cfg=[]; cfg.channel='heartrate';
  data_hr=ft_selectdata(cfg, data_clean);
  if new==0
    run(j).variables.trial{1}(1,:)=data_hr.trial{1}(:,:);
    run(j).variables.label(1)=data_hr.label;
  elseif new==1
  run(j).variables=data_hr;
  end
  
  % visualize results
  if vis
    cfg=[];
    cfg.blocksize=120;
    cfg.ylim=([50 150]);
    cfg.channel= {'heartrate'};
    cfg.event=run(j).events(find(ismember({run(j).events.type}, {'Gait_events', 'FOG_Trigger', 'AAS_task'}))); % only plot the FOG_Triggers and the Gait_events
    cfg.plotevents='yes';
    cfg.ploteventlabels='colorvalue';
    cfg=ft_databrowser(cfg, run(j).variables);
  end
end
